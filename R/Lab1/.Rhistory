+   sum = 0
+   for(i in 1:ncol(x)){
+   cat("En la columna", colnames(x[i]), "total de valores NA:", colSums(is.na(x[i])),"\n")
+   }
+ }
sin_valor <- function(x) {+   sum = 0
+   for(i in 1:ncol(x)){
+   cat("En la columna", colnames(x[i]), "total de valores NA:", colSums(is.na(x[i])),"\n")
+   }
+ }
sin_valor <- function(x) {+   sum = 0
+   for(i in 1:ncol(x)){
+   cat("En la columna", colnames(x[i]), "total de valores NA:", colSums(is.na(x[i])),"\n")
+   }
+ }
sin_valor <- function(x) {
sum=0
for(i in 1:ncol(x)){}
}
View(sin_valor)
View(sin_valor)
View(sin_valor)
sin_valor <- function(x) {
sum=0
for(i in 1:ncol(x)){
cat("En la columna", colnames(x[i]), "total de valores NA: ", colSums(is.na(x[i])),"\n")
}
}
View(sin_valor)
View(sin_valor)
sin_valor(titanic_data)
#funcion en_blanco(dataframe) que desliega cuantos valores en blancoposee cada variable
en_blanco <- function(x) {
sum = 0
for(i in 1:ncol(x)){
cat("En la columna", colnames(x[i]), "total de valores en blanco", colSums(x[i]==""), "\n")
}
}
en_blanco(titanic_data)
titanic_data$PassengerId[titanic_data$Embarked==""]
titanic_data$Pclass[titanic_data&PassengerId==62]
titanic_data$Pclass[titanic_data&PassengerId == 62]
titanic_data$Pclass[titanic_data$PassengerId == 62]
titanic_data$Fare[titanic_data$PassengerId == 62]
titanic_data$Pclass[titanic_data$PassengerId == 830]
titanic_data$Fare[titanic_data$PassengerId == 830]
library(dplyr)
embark_fare<-titanic_data%>%filter(PassengerId!=62 & PassengerId!=830)
View(embark_fare)
library(ggplot2)
library(scales)
ggplot(data = embark_fare, aes(x = Embarked, y =Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept = 80),)
ggplot(data = embark_fare, aes(x = Embarked, y =Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept = 80),)
ggplot(data = embark_fare, aes(x = Embarked, y =Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept = 80),
colour = "red", linetype = "dashed", lwd =2) +
scale_y_continuous(labels = dollar_format())+
theme_bw()
library(ggplot2)+}
library(ggplot2)+}
library(ggplot2)
library(ggplot)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("scales")
ggplot(data = embark_fare, aes(x = Embarked, y =Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept = 80),
colour = "red", linetype = "dashed", lwd =2) +
scale_y_continuous(labels = dollar_format())+
theme_bw()
ggplot(data = embark_fare, aes(x = Embarked, y =Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept = 80),
colour = "red", linetype = "dashed", lwd =2) +
scale_y_continuous(labels = dollar_format())+
theme_bw()
install.packages("ggplot")
library(ggplot2)
library(scales)
ggplot(data = embark_fare, aes(x = Embarked, y = Fare, fill = factor(Pclass))) +
geom_boxplot() +
geom_hline(aes(yintercept = 80),
colour = "red", linetype = "dashed", lwd = 2) +
scale_y_continuous(labels = dollar_format()) +
theme_bw()
titanic_data$Embarked[c(62, 830)] <-"C"
table(titanic_data$Survived)
barplot
barplot(table(titanic_data$Survived), main="Pasajeros en Titanic", + names= c("Murieron", "Sobrevivieron"))
barplot(table(titanic_data$Survived), main="Pasajeros en Titanic", names= c("Murieron", "Sobrevivieron"))
prop.table(table(titanic_data$Survived))
barplot(table(titanic_data$Pclass), main="Pasajeros de Titanic por Clase", names= c("Primera", "Segunda", "Tercera"))
table(titanic_data$Sex)
barplot(table(titanic_data$Sex), main="Pasajeros del Titanic por Genero", names= c("Mujer", "Hombre"))
counts=table(titanic_data$Survived, titanic_data$Sex)
barplot(counts, col=c("green","yellow"),legend=c("Murieron", "Sobrevivieron"), main="Sobrevivencia de Pasajeros por Genero")
counts1=table(titanic_data$Survived, titanic_data$Pclass)
barplot(counts1, col=c("green","yellow"),legend=c("Murieron", "Sobrevivieron"), main="Sobrevivencia de Pasajeros por Clase")
barplot(counts1, col=c("green","yellow"),legend=c("Murieron", "Sobrevivieron"), main="Sobrevivencia de Pasajeros por Clase", names=c("Primera", "Segunda", "Tercera"))
install.packages("rvest")
install.packages("xml")
install.packages("XML")
install.packages("XML")
install.packages("xml")
install.packages("xml2")
library(rvest)
library(rvest)
library(XML)
library(xml)
library(xml2)
setwd("C:/RStudio Projects")
upc_url <-'https://pregrado.upc.edu.pe/facultad-de-ingenieria/ciencias-de-la-computacion/'
setwd("C:/RStudio Projects/Lab3")
upc_read <-readLines(upc_url, encoding = "UTF-8", warn = FALSE)
parsed_upc<-htmlParse(upc_read, encoding = "UTF-8")
upc_enter_text <-parsed_upc["//p"]
View(upc_enter_text)
length(upc_enter_text)
upc_enter_text[[10]]
upc_enter_text[[11]]
length(getHTMLLinks(upc_read))
length((readHTMLTable(upc_read)))
wiki_url <-'https://es.wikipedia.org/wiki/Ayuda:Tablas'
wiki_read <-readLines(wiki_url, encoding = "UTF-8", warn = FALSE)
parsed_wiki <-htmlParse(wiki_read, encoding = "UTF-8")
wiki_intro_text <-parsed_wiki["//p"]
length(wiki_intro_text)
length(getHTMLLinks(wiki_read))
length((readHTMLTable(wiki_read))
)
names(readHTMLTable(wiki_read))
readHTMLTable(wiki_read)$"Una tabla ejemplo\n"
library(xml2)
library(rvest)
pelis <-read_html("https://www.imdb.com/search/title/?count=100&release_date=2020,2020&title_type=feature")
rank_data_html <-html_nodes(pelis,'.text-primary')
rank_data <-html_text(rank_data_html)
head(rank_data
)
rank_data<-as.numeric(rank_data
)
head(rank_data)
tit_data_html <-html_nodes(pelis,'.lister-item-header a')
tit_data <-html_text(tit_data_html)
head(tit_data)
desc_data_html <-html_nodes(pelis,'.ratings-bar+ .text-muted'
)
desc_data <-html_text(desc_data_html)
View(desc_data_html)
desc_data <-html_text(desc_data_html)
head(desc_data)
desc_data <-gsub("\n","",desc_data)
head(desc_data)
runtime_data_html <-html_nodes(pelis,'.text-muted .runtime')
runtime_data <-html_text(runtime_data_html)
head(runtime_data)
runtime_data<-gsub(" min","",runtime_data)
runtime_data<-as.numeric(runtime_data)
head(runtime_data)
genre_data_html <-html_nodes(pelis,'.genre')
genre_data <-html_text(genre_data_html)
head(genre_data
)
genre_data<-gsub("\n","",genre_data)
head(genre_data
)
genre_data<-gsub(" ","",genre_data)
head(genre_data
)
genre_data<-gsub(",.*","",genre_data)
head(genre_data)
genre_data<-as.factor(genre_data)
head(genre_data)
rating_data <-html_text(rating_data_html)
rating_data <-html_text(pelis, '.strong')
rating_data
rating_data <-html_text(pelis, '.inline-block.ratings-imdb-rating')
rating_data <-html_text(pelis, '.ratings-bar')
rating_data <-html_text(pelis, '.ratings-bar.inline-block.ratings-imdb-rating')
rating_data <-html_text(pelis, '.ratings-imdb-rating')
rating_data <-html_text(pelis, '.ratings-bar .inline-block.ratings-imdb-rating')
rating_data <-html_text(pelis, '.ratings-bar .ratings-imdb-rating')
rating_data <-html_text(pelis, '.ratings-bar .strongs')
rating_data
rating_data <-html_text(pelis, '.ratings-bar')
rating_data
rating_data <-html_text(rating_data_html)
ranting_data_html <-html_nodes(pelis,'.ratigns-imdb-rating')
ranting_data_html <-html_nodes(pelis,'.inline-block.ratigns-imdb-rating')
ranting_data_html <-html_nodes(pelis,'.inline-block .ratigns-imdb-rating')
ranting_data_html <-html_nodes(pelis,'ratings-bar')
ranting_data_html
ranting_data_html <-html_nodes(pelis,'.ratings-bar')
rating_data <-html_text(rating_data_html
)
View(ranting_data_html)
View(ranting_data_html)
Delete(ranting_data_html)
delete(ranting_data_html)
erase(ranting_data_html)
rating_data <-html_text(ranting_data_html)
rating_data
ranting_data_html <-html_nodes(pelis,'.ratings-bar .ir')
ranting_data_html <-html_nodes(pelis,'.ratings-bar .inline-block')
View(ranting_data_html)
ranting_data_html <-html_nodes(pelis,'.ratings-bar .ratings-imdb-rating')
rating_data <-html_text(ranting_data_html)
rating_data
ranting_data_html <-html_nodes(pelis,'.ratings-bar .ratings-imdb-rating .strongs')
ranting_data_html <-html_nodes(pelis,'.ratings-bar .ratings-imdb-rating .strong')
ranting_data_html <-html_nodes(pelis,'.ratings-bar .ratings-imdb-rating')
rating_data <-html_text(ranting_data_html)
rating_data
rating_data<-gsub("\n","",rating_data)
rating_data<-gsub(" ","",rating_data)
rating_data
ranting_data_html <-html_nodes(pelis,'.ratings-imdb-rating strong')
View(ranting_data_html)
rating_data_html
ranting_data_html
metascore_data_html <-html_nodes(pelis,'.metascore')
metascore_data <-html_text(metascore_data_html)
head(metascore_data)
metascore_data<-gsub(" ","",metascore_data)
head(metascore_data)
length(metascore_data)
metascore_data<-as.numeric(metascore_data)
head(metascore_data)
votos_data_html <-html_nodes(pelis,'.sort-num_votes-visible span:nth-child(2)')
votos_data <-html_text(votos_data_html)
head(votos_data)
votos_data<-gsub(",","",votos_data)
votos_data<-gsub(",","",votos_data)
head(votos_data)
gross_data_html <-html_nodes(pelis,'.ghost~ .text-muted+ span')
gross_data <-html_text(gross_data_html
)
head(gross_data)
gross_data<-gsub("M","",gross_data)
gross_data<-substring(gross_data,2,6)
head(gross_data)
length(gross_data)
gross_data<-as.numeric(gross_data)
head(gross_data)
director_data_html <-html_nodes(pelis,'.text-muted+ p a:nth-child(1)')
director_data <-html_text(director_data_html)
head(director_data)
director_data<-as.factor(director_data)
head(director_data)
actor_data_html <-html_nodes(pelis,'.lister-item-content .ghost+ a')
actor_data <-html_text(actor_data_html)
head(actor_data)
actor_data<-as.factor(actor_data
)
head(actor_data)
library('ggplot2')
qplot(data = pelis_df,Runtime,fill = Genero,bins = 30, main="Pelicula: Duracionvs Genero")
pelis_df<-data.frame(Rank = rank_data, Titulo = tit_data, Runtime = runtime_data,  Genero = genre_data, Director = director_data, Actor = actor_data)
qplot(data = pelis_df,Runtime,fill = Genero,bins = 30, main="Pelicula: Duracionvs Genero")
tot_pelis <-table(pelis_df$Genero)
tot_pelis
head(tot_pelis)
barplot(tot_pelis,main="Distribucion de Peliculas segun Genero",xlab="Genero",ylab="Total Peliculas")
write.csv(pelis_df,'pelis_df.csv', row.names = TRUE)
games <- read_html("https://www.metacritic.com/browse/games/score/metascore/all/psvita/filtered")
games <- read_html("https://www.metacritic.com/browse/games/score/metascore/all/psvita/filtered")
grank_data_html <-html_nodes(games,'.title numbered')
View(genre_data_html)
View(grank_data_html)
grank_data_html <-html_nodes(games,'.title')
grank_data_html <-html_nodes(games,'.title .numbered')
grank_data_html <-html_nodes(games,'.numbered')
View(grank_data_html)
View(grank_data_html)
grank_data <-html_text(grank_data_html)
grank_data
grank_data <- gsub("\n", "", grank_data)
grank_data <- gsub(" ", "", grank_data)
grank_data
grank_data <- as.numeric(grank_data)
grank_data
gtit_data_html <- html_nodes(games, 'a .title')
gtit_data_html <- html_nodes(games, '.title')
gtit_data_html <- html_nodes(games, '.title h3')
gtit_data <- html_text(gtit_data_html)
gtit_data
gdesc_data_html <- html_nodes(games, '.summary')
gdesc_data <- html_text(gdesc_data)
gdesc_data <- html_text(gdesc_data_html)
gdesc_data
gdesc_data <- gsup("\n", "", gdesc_data)
gdesc_data <- gsup("\n", "", gdesc_data)
gdesc_data<-gsup("\n", "", gdesc_data)
gdesc_data<-gsub("\n", "", gdesc_data)
gdesc_data<-gsub(" ", "", gdesc_data)
gdesc_data
gdesc_data<-gsub("\n", "", gdesc_data)
gdesc_data
gdesc_data<-gsub(" ", "", gdesc_data)
gdesc_data
gdesc_data <- html_text(gdesc_data_html)
gdesc_data<-gsub("\n", "", gdesc_data)
gdesc_data
gplataform_data_html <- html_node(games, '.data')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
gplataform_data_html <- html_node(games, '. platform .data')
gplataform_data_html <- html_node(games, '. platform data')
gplataform_data_html <- html_node(games, '.platform data')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
gplataform_data_html <- html_node(games, '.platform .data')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
gplataform_data_html <- html_node(games, '.clamp-details .platform .data')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
gplataform_data_html <- html_node(games, '.clamp-details')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
gplataform_data_html <- html_node(games, '.clamp-details data')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
gdate_data_html <- html_nodes(games, '.clamp_details span')
gdate_data <- html_text(gdate_data_html)
gdate_data_html <- html_nodes(games, '.clamp-details span')
gdate_data <- html_text(gdate_data_html)
gdate_data
gdate_data_html <- html_nodes(games, '.clamp-details div')
gdate_data <- html_text(gdate_data_html)
gdate_data
gplataform_data_html <- html_node(games, '.clamp-details div')
gplataform_data <- html_text(gplataform_data_html)
gplataform_data <- gsub
gplataform_data()
gplataform_data
gplataform_data <- html_text(gplataform_data_html)
gplataform_data <- gsub("\n", "", gplataform_data)
gplataform_data <- gsub(" ", "", gplataform_data)
gplataform_data <- gsub("Plataform", "", gplataform_data)
gplataform_data
gplataform_data <- html_text(gplataform_data_html)
gplataform_data
games <- read_html("https://www.metacritic.com/browse/games/score/metascore/all/psvita/filtered")
grank_data <- html_nodes(games, '.numbered')
grank_data_html <- html_nodes(games, '.numbered')
grank_data <- html_text(grank_data_html)
View(grank_data)
head(grank_data)
grank_data <- gsub("\n", "", grank_data)
grank_data <- gsub(" ", "", grank_data)
grank_data <- as.numeric(grank_data)
head(grank_data)
gtit_data_html <- html_node(games, '.a .title h3')
gtit_data_html <- html_node(games, '.title h3')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.title')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.a')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.title')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
rm(gtit_data_html)
rm(gtit_data)
gtit_data_html <- html_node(games, '.a')
gtit_data <- html_text(gtit_data_html)
rm(gtit_data)
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.title')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.a')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, 'a')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.a h3')
gtit_data_html <- html_node(games, '.a .h3')
gtit_data_html <- html_node(games, '.a .title')
gtit_data_html <- html_node(games, '.title')
gtit_data_html <- html_node(games, '.title h3')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
rm(gtit_data_html)
rm(gtit_data)
gtit_data_html <- html_node(games, '.title h3')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
rm(gtit_data_html)
head(gtit_data)
rm(gtit_data)
gtit_data_html <- html_node(games, '.title')
gtit_data <- html_text(gtit_data_html)
> rm(gtit_data_html)
rm(gtit_data_html)
rm(gtit_data)
gtit_data_html <- html_node(games, '.title .h3')
gtit_data_html <- html_node(games, 'clamp-summary-wrap .title h3')
gtit_data_html <- html_node(games, 'clamp-summary-wrap .title h3')
gtit_data_html <- html_node(games, 'clamp-summary-wrap .title')
gtit_data_html <- html_node(games, 'clamp-summary-wrap')
gtit_data_html <- html_node(games, '.clamp-summary-wrap')
gtit_data_html <- html_node(games, '.clamp-summary-wrap .title')
gtit_data_html <- html_node(games, '.clamp-summary-wrap .title h3')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
rm(gtit_data_html)
rm(gtit_data)
gtit_data_html <- html_node(games, '.clamp-summary-wrap .title')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gtit_data_html <- html_node(games, '.clamp-summary-wrap')
rm(gtit_data_html)
rm(gtit_data)
gtit_data_html <- html_node(games, '.clamp-summary-wrap .title h3')
rm(gtit_data_html)
gtit_data_html <- html_nodes(games, '.clamp-summary-wrap .title h3')
gtit_data <- html_text(gtit_data_html)
head(gtit_data)
gplatform_data_html <- html_nodes(games, '.data')
gplatform_data_html <- html_nodes(games, '.platform .data')
gplatform_data <- html_text(gplatform_data_html)
head(gplatform_data)
gplatform_data <- gsub("\n", "", gplatform_data)
gplatform_data <- gsub(" ", "", gplatform_data)
gplatform_data <- as.factor(gplatform_data)
head(gplatform_data)
gdate_data_html <- html_nodes(games, '.clamp-details span')
gdate_data <- html_text(gdate_data_html)
gdate_data_html <- html_nodes(games, '.clamp-details .span')
gdate_data_html <- html_nodes(games, '.clamp-details')
head(gdate_data)
gdate_data[gdate_data == "Plataform:"]
gdate_data[gdate_data == "Plataform:"] <- NULL
head(gdate_data)
gdate_data[gdate_data == "Platform:"] <- NULL
gdate_data <- gdate_data[gdate_data == "Platform:"]
gdate_data_html <- html_nodes(games, '.clamp-details')
gdate_data <- html_text(gdate_data_html)
gdate_data_html <- html_nodes(games, '.clamp-details span')
gdate_data <- html_text(gdate_data_html)
gdate_data <- gdate_data[gdate_data != "Platform:"]
gdate_data <- gdate_data[gdate_data != "\n"]
head(gdate_data)
gdate_data <- gdate_data[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99)]
head(gdate_data)
view(gdate_data)
View(gdate_data)
gdate_data <- gdate_data[-c(52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150)]
gdate_data <- html_text(gdate_data_html)
gdate_data <- gdate_data[gdate_data != "Platform:"]
gdate_data <- gdate_data[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51)]
gdate_data <- html_text(gdate_data_html)
gdate_data <- gdate_data[gdate_data != "Platform:"]
gdate_data <- gdate_data[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99)]
gdate_data <- gdate_data[c(52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150)]
gdate_data <- html_text(gdate_data_html)
gdate_data <- gdate_data[gdate_data != "Platform:"]
gdate_data <- gdate_data[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99)]
gdate_data <- html_text(gdate_data_html)
gdate_data <- gdate_data[gdate_data != "Platform:"]
gdate_data <- gdate_data[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199)]
substr("abcdef", 2, 4)
gdate_data <- substring(gdate_data, )
gdate_data <- sub(".*,", "", gdate_data)
gdate_data <- gsub(" ", "", gdate_data)
gdesc_data_html <- html_nodes(games, '.summary')
gdesc_data <- html_text(gdesc_data_html)
View(gdesc_data)
head(gdesc_data)
gmetarate_data_html <- html_nodes(games, '.metascore_w large game positive')
gmetarate_data_html <- html_nodes(games, '.metascore_w .large .game positive')
gmetarate_data_html <- html_nodes(games, '.positive')
gmetarate_data_html <- html_nodes(games, '.metascore_anchor positive')
gmetarate_data_html <- html_nodes(games, '.metascore_anchor .positive')
gmetarate_data_html <- html_nodes(games, '.metascore_w')
gmetarate_data_html <- html_nodes(games, '.game .positive')
gmetarate_data_html <- html_nodes(games, '.clamp-metascore .metascore_anchor div')
gmetarate_data <- html_text(gmetarate_data_html)
gdate_data <- as.Date(gdate_data)
gdate_data <- as.Date.character(gdate_data)
guserrate_data_html <- html_nodes(games, '.clamp-userscore .metascore_anchor div')
guserrate_data <- html_text(guserrate_data_html)
gmetarate_data <- as.numeric(gmetarate_data)
guserrate_data <- as.numeric(guserrate_data)
games_df<-data.frame(Rank = grank_data, Titulo = gtit_data, Plataforma = gplatform_data,  Año de Publicacion = gdate_data, MetacriticScore = gmetarate_data, UserScore = guserrate_data, Descripcion = gdesc_data)
games_df<-data.frame(Rank = grank_data, Titulo = gtit_data, Plataforma = gplatform_data,  Anio de Publicacion = gdate_data, MetacriticScore = gmetarate_data, UserScore = guserrate_data, Descripcion = gdesc_data)
games_df<-data.frame(Rank = grank_data, Titulo = gtit_data, Plataforma = gplatform_data,  AñoPublicacion = gdate_data, MetacriticScore = gmetarate_data, UserScore = guserrate_data, Descripcion = gdesc_data)
str(games_df)
library('ggplot2')
qplot(data = games_df, Plataforma, fill = AñoPublicacion, bins = 30, main="Videojuegos: Plataforma vs Año de Publicacion")
qplot(data = games_df, AñoPublicacion, fill = Plataforma, bins = 30, main="Videojuegos: Plataforma vs Año de Publicacion")
qplot(data = games_df, AñoPublicacion, Plataforma, bins = 30, main="Videojuegos: Plataforma vs Año de Publicacion")
qplot(data = games_df, AñoPublicacion, Plataforma, bins = 30, main="Videojuegos: Plataforma vs Año de Publicacion")
qplot(data = games_df, AñoPublicacion, fill = Plataforma, bins = 30, main="Videojuegos: Plataforma vs Año de Publicacion")
barplot(tot_games,main="Distribucion de Juegos segun Plataforma",xlab="Plataforma",ylab="Total de Juegos"
)
tot_games <- table(games_df$Plataforma)
barplot(tot_games,main="Distribucion de Juegos segun Plataforma",xlab="Plataforma",ylab="Total de Juegos")
View(tot_games)
